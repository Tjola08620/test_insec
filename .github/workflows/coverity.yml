name: "Coverity"

on:
  workflow_dispatch

jobs:
  build:
    runs-on: Ubuntu-Latest
    env:
      PROJECT_NAME: "insecure-bank"
      BUILD_COMMAND: "mvn clean install -DskipTests=true"
      COVERITY_OS: "linux64"
      COVERITY_URL:  ${{ secrets.COVERITY_URL }}
      COVERITY_USER:  ${{ secrets.COVERITY_USER  }}
      COVERITY_PASSWORD: ${{ secrets.COVERITY_PASSWORD  }}
      COVERITY_VERSION: ${{ secrets.COVERITY_VERSION  }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    # Download Coverity
    - name: Download Coverity
      run: |        
          curl -fLsS --user $COVERITY_USER:$COVERITY_PASSWORD $COVERITY_URL/downloadFile.htm?fn=cov-analysis-$COVERITY_OS-$COVERITY_VERSION.tar.gz | tar -C /tmp -xzf -
          curl -fLsS --user $COVERITY_USER:$COVERITY_PASSWORD -o /tmp/cov-analysis-$COVERITY_OS-$COVERITY_VERSION/bin/license.dat $COVERITY_URL/downloadFile.htm?fn=license-cov-unlocked.dat
          echo "/tmp/cov-analysis-$COVERITY_OS-$COVERITY_VERSION/bin/" >> $GITHUB_PATH
          
    - name: Coverity Configuration
      run: |
          /tmp/cov-analysis-$COVERITY_OS-$COVERITY_VERSION/bin/cov-configure --java
          cov-configure --javascript
          
    - name: Coverity Capture
      run: |        
          /tmp/cov-analysis-$COVERITY_OS-$COVERITY_VERSION/bin/cov-build --dir idir --fs-capture-search . $BUILD_COMMAND
          
    - name: Coverity Analysis
      run: |        
          /tmp/cov-analysis-$COVERITY_OS-$COVERITY_VERSION/bin/cov-analyze --dir idir --all --webapp-security --enable-audit-mode
          
    - name: Coverity Commit Defects
      run: |        
          /tmp/cov-analysis-$COVERITY_OS-$COVERITY_VERSION/bin/cov-commit-defects --dir idir --url  $COVERITY_URL --user $COVERITY_USER --password $COVERITY_PASSWORD --stream $PROJECT_NAME
          
    - name: Coverity Quality Gate
      run: |
        curl -fLsS --user $COVERITY_USER:$COVERITY_PASSWORD $COVERITY_URL/api/viewContents/issues/v1/OWASP%20Web%20Top%2010?projectId=$PROJECT_NAME > results.json
        if [ $(cat results.json | jq .viewContentsV1.totalRows) -ne 0 ]; then cat results.json | jq .viewContentsV1.rows; exit 1; fi
        
